// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	// The request was accepted.
	Status_OK Status = 0
	// The request was unauthorized.
	Status_UNAUTHORIZED Status = 1
	// There was an error somewhere in the response.
	Status_ERROR Status = 2
)

var Status_name = map[int32]string{
	0: "OK",
	1: "UNAUTHORIZED",
	2: "ERROR",
}

var Status_value = map[string]int32{
	"OK":           0,
	"UNAUTHORIZED": 1,
	"ERROR":        2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

type StatusResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=proto.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

type JoinRequest struct {
	JoinToken            string   `protobuf:"bytes,1,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{1}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetJoinToken() string {
	if m != nil {
		return m.JoinToken
	}
	return ""
}

type JoinResponse struct {
	AdvertiseAddr        string   `protobuf:"bytes,1,opt,name=advertise_addr,json=advertiseAddr,proto3" json:"advertise_addr,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	RaftPort             uint32   `protobuf:"varint,3,opt,name=raft_port,json=raftPort,proto3" json:"raft_port,omitempty"`
	SerfPort             uint32   `protobuf:"varint,4,opt,name=serf_port,json=serfPort,proto3" json:"serf_port,omitempty"`
	WanSerfPort          uint32   `protobuf:"varint,5,opt,name=wan_serf_port,json=wanSerfPort,proto3" json:"wan_serf_port,omitempty"`
	Status               Status   `protobuf:"varint,6,opt,name=status,proto3,enum=proto.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{2}
}

func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (m *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(m, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetAdvertiseAddr() string {
	if m != nil {
		return m.AdvertiseAddr
	}
	return ""
}

func (m *JoinResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JoinResponse) GetRaftPort() uint32 {
	if m != nil {
		return m.RaftPort
	}
	return 0
}

func (m *JoinResponse) GetSerfPort() uint32 {
	if m != nil {
		return m.SerfPort
	}
	return 0
}

func (m *JoinResponse) GetWanSerfPort() uint32 {
	if m != nil {
		return m.WanSerfPort
	}
	return 0
}

func (m *JoinResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

type ConfirmJoinRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RaftAddr             string   `protobuf:"bytes,2,opt,name=raft_addr,json=raftAddr,proto3" json:"raft_addr,omitempty"`
	JoinToken            string   `protobuf:"bytes,3,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmJoinRequest) Reset()         { *m = ConfirmJoinRequest{} }
func (m *ConfirmJoinRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmJoinRequest) ProtoMessage()    {}
func (*ConfirmJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{3}
}

func (m *ConfirmJoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmJoinRequest.Unmarshal(m, b)
}
func (m *ConfirmJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmJoinRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmJoinRequest.Merge(m, src)
}
func (m *ConfirmJoinRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmJoinRequest.Size(m)
}
func (m *ConfirmJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmJoinRequest proto.InternalMessageInfo

func (m *ConfirmJoinRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConfirmJoinRequest) GetRaftAddr() string {
	if m != nil {
		return m.RaftAddr
	}
	return ""
}

func (m *ConfirmJoinRequest) GetJoinToken() string {
	if m != nil {
		return m.JoinToken
	}
	return ""
}

type ApplyRequest struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyRequest) Reset()         { *m = ApplyRequest{} }
func (m *ApplyRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyRequest) ProtoMessage()    {}
func (*ApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{4}
}

func (m *ApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyRequest.Unmarshal(m, b)
}
func (m *ApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyRequest.Marshal(b, m, deterministic)
}
func (m *ApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRequest.Merge(m, src)
}
func (m *ApplyRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyRequest.Size(m)
}
func (m *ApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRequest proto.InternalMessageInfo

func (m *ApplyRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type ForwardJoinRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardJoinRequest) Reset()         { *m = ForwardJoinRequest{} }
func (m *ForwardJoinRequest) String() string { return proto.CompactTextString(m) }
func (*ForwardJoinRequest) ProtoMessage()    {}
func (*ForwardJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{5}
}

func (m *ForwardJoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardJoinRequest.Unmarshal(m, b)
}
func (m *ForwardJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardJoinRequest.Marshal(b, m, deterministic)
}
func (m *ForwardJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardJoinRequest.Merge(m, src)
}
func (m *ForwardJoinRequest) XXX_Size() int {
	return xxx_messageInfo_ForwardJoinRequest.Size(m)
}
func (m *ForwardJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardJoinRequest proto.InternalMessageInfo

func (m *ForwardJoinRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ForwardJoinRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.Status", Status_name, Status_value)
	proto.RegisterType((*StatusResponse)(nil), "proto.StatusResponse")
	proto.RegisterType((*JoinRequest)(nil), "proto.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "proto.JoinResponse")
	proto.RegisterType((*ConfirmJoinRequest)(nil), "proto.ConfirmJoinRequest")
	proto.RegisterType((*ApplyRequest)(nil), "proto.ApplyRequest")
	proto.RegisterType((*ForwardJoinRequest)(nil), "proto.ForwardJoinRequest")
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor_3cfb3b8ec240c376) }

var fileDescriptor_3cfb3b8ec240c376 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x6d, 0xb2, 0xbb, 0xa9, 0xb9, 0xf9, 0x20, 0x5c, 0x11, 0x63, 0x45, 0x28, 0x01, 0xa1, 0x88,
	0x16, 0xac, 0x88, 0xcf, 0xa1, 0x56, 0xad, 0x82, 0x5b, 0xa6, 0xed, 0x8b, 0x2f, 0x31, 0x75, 0x66,
	0x21, 0x5a, 0x67, 0xe2, 0xcc, 0xac, 0x4b, 0xff, 0xa2, 0xff, 0xc7, 0x77, 0x99, 0x99, 0x24, 0x9b,
	0x75, 0x69, 0x9f, 0x76, 0xe7, 0x9c, 0x73, 0xef, 0x3d, 0xe7, 0x04, 0x92, 0x6f, 0xd7, 0x4b, 0xa5,
	0x99, 0x3c, 0x6c, 0xa5, 0xd0, 0x02, 0x67, 0xf6, 0xa7, 0x78, 0x03, 0xe9, 0xb9, 0xae, 0xf5, 0x52,
	0x11, 0xa6, 0x5a, 0xc1, 0x15, 0xc3, 0xa7, 0x10, 0x28, 0x8b, 0xe4, 0xde, 0xbe, 0x77, 0x90, 0x1e,
	0x25, 0x6e, 0xe0, 0xb0, 0x93, 0x75, 0x64, 0xf1, 0x1c, 0xa2, 0x8f, 0xa2, 0xe1, 0x84, 0xfd, 0x5a,
	0x32, 0xa5, 0xf1, 0x09, 0xc0, 0x77, 0xd1, 0xf0, 0x4a, 0x8b, 0x1f, 0x8c, 0xdb, 0xc9, 0x90, 0x84,
	0x06, 0xb9, 0x30, 0x40, 0xf1, 0xc7, 0x83, 0xd8, 0xc9, 0x87, 0x2b, 0x69, 0x4d, 0x7f, 0x33, 0xa9,
	0x1b, 0xc5, 0xaa, 0x9a, 0x52, 0xd9, 0xcd, 0x24, 0x03, 0x5a, 0x52, 0x2a, 0x31, 0x05, 0xbf, 0xa1,
	0xb9, 0x6f, 0x29, 0xbf, 0xa1, 0xf8, 0x18, 0x42, 0x59, 0x2f, 0x74, 0xd5, 0x0a, 0xa9, 0xf3, 0xc9,
	0xbe, 0x77, 0x90, 0x90, 0x7b, 0x06, 0x38, 0x13, 0x52, 0x1b, 0x52, 0x31, 0xb9, 0x70, 0xe4, 0xd4,
	0x91, 0x06, 0xb0, 0x64, 0x01, 0xc9, 0xaa, 0xe6, 0xd5, 0x5a, 0x30, 0xb3, 0x82, 0x68, 0x55, 0xf3,
	0xf3, 0x5e, 0xb3, 0x8e, 0x1e, 0xdc, 0x15, 0xfd, 0x2b, 0xe0, 0xb1, 0xe0, 0x8b, 0x46, 0xfe, 0x1c,
	0x37, 0xe0, 0xac, 0x7a, 0x5b, 0x56, 0x6d, 0x38, 0x97, 0xc0, 0x5a, 0xb5, 0xb9, 0x36, 0xeb, 0x9a,
	0xfc, 0x5f, 0x57, 0x01, 0x71, 0xd9, 0xb6, 0xd7, 0x37, 0xfd, 0x6e, 0x84, 0xe9, 0x95, 0xa0, 0x37,
	0x76, 0x7b, 0x4c, 0xec, 0xff, 0xe2, 0x3d, 0xe0, 0x3b, 0x21, 0x57, 0xb5, 0xa4, 0x63, 0x17, 0x0f,
	0x61, 0x97, 0x0b, 0xca, 0xaa, 0xc1, 0x4a, 0x60, 0x9e, 0xa7, 0x14, 0x73, 0xd8, 0x35, 0x4e, 0x98,
	0x52, 0x9d, 0x99, 0xfe, 0xf9, 0xec, 0x05, 0x04, 0x2e, 0x20, 0x06, 0xe0, 0xcf, 0x3f, 0x65, 0x3b,
	0x98, 0x41, 0x7c, 0xf9, 0xb9, 0xbc, 0xbc, 0xf8, 0x30, 0x27, 0xa7, 0x5f, 0x4e, 0xde, 0x66, 0x1e,
	0x86, 0x30, 0x3b, 0x21, 0x64, 0x4e, 0x32, 0xff, 0xe8, 0xaf, 0x07, 0x13, 0x72, 0x76, 0x8c, 0x2f,
	0x61, 0x6a, 0x0e, 0x23, 0x76, 0x25, 0x8d, 0x5c, 0xec, 0xdd, 0xdf, 0xc0, 0xdc, 0x27, 0x2f, 0x76,
	0xb0, 0x84, 0x68, 0x54, 0x1c, 0x3e, 0xea, 0x54, 0xdb, 0x65, 0xee, 0x3d, 0xd8, 0x6c, 0x7e, 0xbd,
	0xe2, 0x35, 0xcc, 0x6c, 0x33, 0xd8, 0x9f, 0x18, 0xf7, 0x74, 0xfb, 0x58, 0x09, 0xd1, 0xa8, 0xac,
	0xe1, 0xf2, 0x76, 0x81, 0xb7, 0xae, 0xb8, 0x0a, 0x2c, 0xfe, 0xea, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x86, 0x3f, 0xfa, 0x3c, 0x48, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCClient is the client API for RPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCClient interface {
	// Join is for when a node wishes to join another node.
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	// ConfirmJoin is for when a node confirms it CAN join that other node.
	ConfirmJoin(ctx context.Context, in *ConfirmJoinRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// A raft log entry apply message for the leader.
	Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// When a node wishes to join us.
	ForwardJoin(ctx context.Context, in *ForwardJoinRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type rPCClient struct {
	cc *grpc.ClientConn
}

func NewRPCClient(cc *grpc.ClientConn) RPCClient {
	return &rPCClient{cc}
}

func (c *rPCClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/proto.RPC/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) ConfirmJoin(ctx context.Context, in *ConfirmJoinRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/proto.RPC/ConfirmJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/proto.RPC/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) ForwardJoin(ctx context.Context, in *ForwardJoinRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/proto.RPC/ForwardJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServer is the server API for RPC service.
type RPCServer interface {
	// Join is for when a node wishes to join another node.
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	// ConfirmJoin is for when a node confirms it CAN join that other node.
	ConfirmJoin(context.Context, *ConfirmJoinRequest) (*StatusResponse, error)
	// A raft log entry apply message for the leader.
	Apply(context.Context, *ApplyRequest) (*StatusResponse, error)
	// When a node wishes to join us.
	ForwardJoin(context.Context, *ForwardJoinRequest) (*StatusResponse, error)
}

func RegisterRPCServer(s *grpc.Server, srv RPCServer) {
	s.RegisterService(&_RPC_serviceDesc, srv)
}

func _RPC_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RPC/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_ConfirmJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).ConfirmJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RPC/ConfirmJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).ConfirmJoin(ctx, req.(*ConfirmJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RPC/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Apply(ctx, req.(*ApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_ForwardJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForwardJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).ForwardJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RPC/ForwardJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).ForwardJoin(ctx, req.(*ForwardJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RPC",
	HandlerType: (*RPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _RPC_Join_Handler,
		},
		{
			MethodName: "ConfirmJoin",
			Handler:    _RPC_ConfirmJoin_Handler,
		},
		{
			MethodName: "Apply",
			Handler:    _RPC_Apply_Handler,
		},
		{
			MethodName: "ForwardJoin",
			Handler:    _RPC_ForwardJoin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}
