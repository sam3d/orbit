// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClusterStatus int32

const (
	ClusterStatus_OK           ClusterStatus = 0
	ClusterStatus_UNAUTHORIZED ClusterStatus = 1
	ClusterStatus_ERROR        ClusterStatus = 2
)

var ClusterStatus_name = map[int32]string{
	0: "OK",
	1: "UNAUTHORIZED",
	2: "ERROR",
}

var ClusterStatus_value = map[string]int32{
	"OK":           0,
	"UNAUTHORIZED": 1,
	"ERROR":        2,
}

func (x ClusterStatus) String() string {
	return proto.EnumName(ClusterStatus_name, int32(x))
}

func (ClusterStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

type ClusterJoinRequest struct {
	JoinToken            string   `protobuf:"bytes,1,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterJoinRequest) Reset()         { *m = ClusterJoinRequest{} }
func (m *ClusterJoinRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterJoinRequest) ProtoMessage()    {}
func (*ClusterJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

func (m *ClusterJoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterJoinRequest.Unmarshal(m, b)
}
func (m *ClusterJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterJoinRequest.Marshal(b, m, deterministic)
}
func (m *ClusterJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterJoinRequest.Merge(m, src)
}
func (m *ClusterJoinRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterJoinRequest.Size(m)
}
func (m *ClusterJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterJoinRequest proto.InternalMessageInfo

func (m *ClusterJoinRequest) GetJoinToken() string {
	if m != nil {
		return m.JoinToken
	}
	return ""
}

type ClusterJoinResponse struct {
	// Information that the joining node should adopt.
	AdvertiseAddr string `protobuf:"bytes,1,opt,name=advertise_addr,json=advertiseAddr,proto3" json:"advertise_addr,omitempty"`
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the node to join.
	RaftPort    uint32 `protobuf:"varint,3,opt,name=raft_port,json=raftPort,proto3" json:"raft_port,omitempty"`
	SerfPort    uint32 `protobuf:"varint,4,opt,name=serf_port,json=serfPort,proto3" json:"serf_port,omitempty"`
	WanSerfPort uint32 `protobuf:"varint,5,opt,name=wan_serf_port,json=wanSerfPort,proto3" json:"wan_serf_port,omitempty"`
	// Simple status response.
	JoinStatus           ClusterStatus `protobuf:"varint,6,opt,name=join_status,json=joinStatus,proto3,enum=proto.ClusterStatus" json:"join_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClusterJoinResponse) Reset()         { *m = ClusterJoinResponse{} }
func (m *ClusterJoinResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterJoinResponse) ProtoMessage()    {}
func (*ClusterJoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{1}
}

func (m *ClusterJoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterJoinResponse.Unmarshal(m, b)
}
func (m *ClusterJoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterJoinResponse.Marshal(b, m, deterministic)
}
func (m *ClusterJoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterJoinResponse.Merge(m, src)
}
func (m *ClusterJoinResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterJoinResponse.Size(m)
}
func (m *ClusterJoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterJoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterJoinResponse proto.InternalMessageInfo

func (m *ClusterJoinResponse) GetAdvertiseAddr() string {
	if m != nil {
		return m.AdvertiseAddr
	}
	return ""
}

func (m *ClusterJoinResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClusterJoinResponse) GetRaftPort() uint32 {
	if m != nil {
		return m.RaftPort
	}
	return 0
}

func (m *ClusterJoinResponse) GetSerfPort() uint32 {
	if m != nil {
		return m.SerfPort
	}
	return 0
}

func (m *ClusterJoinResponse) GetWanSerfPort() uint32 {
	if m != nil {
		return m.WanSerfPort
	}
	return 0
}

func (m *ClusterJoinResponse) GetJoinStatus() ClusterStatus {
	if m != nil {
		return m.JoinStatus
	}
	return ClusterStatus_OK
}

type ClusterJoinConfirmRequest struct {
	// Information about our node so that the store knows what we are.
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RaftAddr string `protobuf:"bytes,2,opt,name=raft_addr,json=raftAddr,proto3" json:"raft_addr,omitempty"`
	// Ensure we authenticate the request.
	JoinToken            string   `protobuf:"bytes,3,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterJoinConfirmRequest) Reset()         { *m = ClusterJoinConfirmRequest{} }
func (m *ClusterJoinConfirmRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterJoinConfirmRequest) ProtoMessage()    {}
func (*ClusterJoinConfirmRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{2}
}

func (m *ClusterJoinConfirmRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterJoinConfirmRequest.Unmarshal(m, b)
}
func (m *ClusterJoinConfirmRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterJoinConfirmRequest.Marshal(b, m, deterministic)
}
func (m *ClusterJoinConfirmRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterJoinConfirmRequest.Merge(m, src)
}
func (m *ClusterJoinConfirmRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterJoinConfirmRequest.Size(m)
}
func (m *ClusterJoinConfirmRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterJoinConfirmRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterJoinConfirmRequest proto.InternalMessageInfo

func (m *ClusterJoinConfirmRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClusterJoinConfirmRequest) GetRaftAddr() string {
	if m != nil {
		return m.RaftAddr
	}
	return ""
}

func (m *ClusterJoinConfirmRequest) GetJoinToken() string {
	if m != nil {
		return m.JoinToken
	}
	return ""
}

type ClusterJoinConfirmResponse struct {
	ConfirmStatus        ClusterStatus `protobuf:"varint,1,opt,name=confirm_status,json=confirmStatus,proto3,enum=proto.ClusterStatus" json:"confirm_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClusterJoinConfirmResponse) Reset()         { *m = ClusterJoinConfirmResponse{} }
func (m *ClusterJoinConfirmResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterJoinConfirmResponse) ProtoMessage()    {}
func (*ClusterJoinConfirmResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{3}
}

func (m *ClusterJoinConfirmResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterJoinConfirmResponse.Unmarshal(m, b)
}
func (m *ClusterJoinConfirmResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterJoinConfirmResponse.Marshal(b, m, deterministic)
}
func (m *ClusterJoinConfirmResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterJoinConfirmResponse.Merge(m, src)
}
func (m *ClusterJoinConfirmResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterJoinConfirmResponse.Size(m)
}
func (m *ClusterJoinConfirmResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterJoinConfirmResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterJoinConfirmResponse proto.InternalMessageInfo

func (m *ClusterJoinConfirmResponse) GetConfirmStatus() ClusterStatus {
	if m != nil {
		return m.ConfirmStatus
	}
	return ClusterStatus_OK
}

func init() {
	proto.RegisterEnum("proto.ClusterStatus", ClusterStatus_name, ClusterStatus_value)
	proto.RegisterType((*ClusterJoinRequest)(nil), "proto.ClusterJoinRequest")
	proto.RegisterType((*ClusterJoinResponse)(nil), "proto.ClusterJoinResponse")
	proto.RegisterType((*ClusterJoinConfirmRequest)(nil), "proto.ClusterJoinConfirmRequest")
	proto.RegisterType((*ClusterJoinConfirmResponse)(nil), "proto.ClusterJoinConfirmResponse")
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor_3cfb3b8ec240c376) }

var fileDescriptor_3cfb3b8ec240c376 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0x4e, 0xea, 0x40,
	0x18, 0xc5, 0x99, 0x72, 0xe1, 0xde, 0x7e, 0xdc, 0x36, 0xcd, 0xdc, 0xbb, 0x28, 0x35, 0x26, 0xb5,
	0x89, 0x09, 0x71, 0xc1, 0x02, 0x74, 0xe5, 0x8a, 0x20, 0xc6, 0x3f, 0x89, 0x98, 0x01, 0x16, 0xea,
	0xa2, 0xa9, 0x74, 0x30, 0xf5, 0x4f, 0x07, 0x67, 0x06, 0x79, 0x2b, 0xdf, 0xc9, 0x37, 0x31, 0x9d,
	0x69, 0x95, 0x0a, 0x61, 0xd5, 0xf6, 0x9c, 0xf3, 0x75, 0xe6, 0x77, 0xf2, 0x81, 0x35, 0x7d, 0x5e,
	0x08, 0x49, 0x79, 0x7b, 0xce, 0x99, 0x64, 0xb8, 0xa6, 0x1e, 0x41, 0x17, 0x70, 0x5f, 0xeb, 0x17,
	0x2c, 0x49, 0x09, 0x7d, 0x5d, 0x50, 0x21, 0xf1, 0x2e, 0xc0, 0x23, 0x4b, 0xd2, 0x50, 0xb2, 0x27,
	0x9a, 0xba, 0xc8, 0x47, 0x2d, 0x93, 0x98, 0x99, 0x32, 0xce, 0x84, 0xe0, 0x03, 0xc1, 0xbf, 0xd2,
	0x94, 0x98, 0xb3, 0x54, 0x50, 0xbc, 0x0f, 0x76, 0x14, 0xbf, 0x51, 0x2e, 0x13, 0x41, 0xc3, 0x28,
	0x8e, 0x79, 0x3e, 0x6a, 0x7d, 0xa9, 0xbd, 0x38, 0xe6, 0xd8, 0x06, 0x23, 0x89, 0x5d, 0x43, 0x59,
	0x46, 0x12, 0xe3, 0x1d, 0x30, 0x79, 0x34, 0x93, 0xe1, 0x9c, 0x71, 0xe9, 0x56, 0x7d, 0xd4, 0xb2,
	0xc8, 0x9f, 0x4c, 0xb8, 0x66, 0x5c, 0x66, 0xa6, 0xa0, 0x7c, 0xa6, 0xcd, 0x5f, 0xda, 0xcc, 0x04,
	0x65, 0x06, 0x60, 0x2d, 0xa3, 0x34, 0xfc, 0x0e, 0xd4, 0x54, 0xa0, 0xb1, 0x8c, 0xd2, 0x51, 0x91,
	0x39, 0x82, 0x86, 0x62, 0x11, 0x32, 0x92, 0x0b, 0xe1, 0xd6, 0x7d, 0xd4, 0xb2, 0x3b, 0xff, 0x75,
	0x0b, 0xed, 0x9c, 0x62, 0xa4, 0x3c, 0xa2, 0xa0, 0xf5, 0x7b, 0xf0, 0x00, 0xcd, 0x15, 0xc4, 0x3e,
	0x4b, 0x67, 0x09, 0x7f, 0x29, 0xfa, 0xd1, 0x04, 0x68, 0x8d, 0x40, 0x31, 0x6b, 0x30, 0x45, 0xa0,
	0x70, 0xcb, 0x65, 0x56, 0x7f, 0x96, 0x79, 0x03, 0xde, 0xa6, 0x83, 0xf2, 0x4a, 0x8f, 0xc1, 0x9e,
	0x6a, 0xa9, 0x00, 0x40, 0x5b, 0x00, 0xac, 0x3c, 0xab, 0x3f, 0x0f, 0x0e, 0xc1, 0x2a, 0xf9, 0xb8,
	0x0e, 0xc6, 0xf0, 0xd2, 0xa9, 0x60, 0x07, 0xfe, 0x4e, 0xae, 0x7a, 0x93, 0xf1, 0xd9, 0x90, 0x9c,
	0xdf, 0x0e, 0x4e, 0x1c, 0x84, 0x4d, 0xa8, 0x0d, 0x08, 0x19, 0x12, 0xc7, 0xe8, 0xbc, 0x23, 0xf8,
	0x9d, 0x8f, 0xe1, 0x53, 0x68, 0xac, 0x5c, 0x0e, 0x37, 0xcb, 0xa7, 0xae, 0xac, 0x8c, 0xe7, 0x6d,
	0xb2, 0x34, 0x44, 0x50, 0xc1, 0x77, 0xa5, 0x35, 0xcb, 0x21, 0xb1, 0xbf, 0x3e, 0x53, 0x2e, 0xda,
	0xdb, 0xdb, 0x92, 0x28, 0x7e, 0x7e, 0x5f, 0x57, 0x99, 0xee, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x16, 0xc1, 0x76, 0x5f, 0xe2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterClient is the client API for Cluster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterClient interface {
	ClusterJoin(ctx context.Context, in *ClusterJoinRequest, opts ...grpc.CallOption) (*ClusterJoinResponse, error)
	ClusterJoinConfirm(ctx context.Context, in *ClusterJoinConfirmRequest, opts ...grpc.CallOption) (*ClusterJoinConfirmResponse, error)
}

type clusterClient struct {
	cc *grpc.ClientConn
}

func NewClusterClient(cc *grpc.ClientConn) ClusterClient {
	return &clusterClient{cc}
}

func (c *clusterClient) ClusterJoin(ctx context.Context, in *ClusterJoinRequest, opts ...grpc.CallOption) (*ClusterJoinResponse, error) {
	out := new(ClusterJoinResponse)
	err := c.cc.Invoke(ctx, "/proto.Cluster/ClusterJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) ClusterJoinConfirm(ctx context.Context, in *ClusterJoinConfirmRequest, opts ...grpc.CallOption) (*ClusterJoinConfirmResponse, error) {
	out := new(ClusterJoinConfirmResponse)
	err := c.cc.Invoke(ctx, "/proto.Cluster/ClusterJoinConfirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServer is the server API for Cluster service.
type ClusterServer interface {
	ClusterJoin(context.Context, *ClusterJoinRequest) (*ClusterJoinResponse, error)
	ClusterJoinConfirm(context.Context, *ClusterJoinConfirmRequest) (*ClusterJoinConfirmResponse, error)
}

func RegisterClusterServer(s *grpc.Server, srv ClusterServer) {
	s.RegisterService(&_Cluster_serviceDesc, srv)
}

func _Cluster_ClusterJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).ClusterJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cluster/ClusterJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).ClusterJoin(ctx, req.(*ClusterJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_ClusterJoinConfirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterJoinConfirmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).ClusterJoinConfirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cluster/ClusterJoinConfirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).ClusterJoinConfirm(ctx, req.(*ClusterJoinConfirmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Cluster",
	HandlerType: (*ClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ClusterJoin",
			Handler:    _Cluster_ClusterJoin_Handler,
		},
		{
			MethodName: "ClusterJoinConfirm",
			Handler:    _Cluster_ClusterJoinConfirm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}
