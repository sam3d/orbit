syntax = "proto3";
package proto;

enum Status {
  // The request was accepted.
  OK = 0;
  // The request was unauthorized.
  UNAUTHORIZED = 1;
  // There was an error somewhere in the response.
  ERROR = 2;
}

message StatusResponse {
  Status status = 1;
}

//
// Cluster methods.
//

service RPC {
  //
  // Cluster join operations.
  //

  // Join is for when a node wishes to join another node.
  rpc Join(JoinRequest) returns (JoinResponse) {}
  // ConfirmJoin is for when a node confirms it CAN join that other node.
  rpc ConfirmJoin(ConfirmJoinRequest) returns (StatusResponse) {}

  //
  // Leader forwarding messages.
  //

  // A raft log entry apply message for the leader.
  rpc Apply(ApplyRequest) returns (StatusResponse) {}
  // When a node wishes to join us.
  rpc ForwardJoin(ForwardJoinRequest) returns (StatusResponse) {}
}

message JoinRequest {
  string join_token = 1; // Authenticate the request.
}

message JoinResponse {
  string advertise_addr = 1;
  string id = 2;

  uint32 raft_port = 3;
  uint32 serf_port = 4;
  uint32 wan_serf_port = 5;

  Status status = 6;
}

message ConfirmJoinRequest {
  string id = 1;
  string raft_addr = 2;

  string join_token = 3; // Re-authenticate the request.
}

//
// Leader forwarding.
//

message ApplyRequest {
  bytes body = 1;
}

message ForwardJoinRequest {
  string node_id = 1;
  string address = 2;
}
